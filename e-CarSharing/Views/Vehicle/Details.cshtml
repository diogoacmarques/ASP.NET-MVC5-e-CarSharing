@model e_CarSharing.Models.VehicleViewModelDetails

@{
    ViewBag.Title = "All Vehicles";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Detalhes</h2>


<div class="form-horizontal">
    <h4>Veiculo</h4>
    <hr />

    <ul class="nav nav-tabs nav-justified">
        <li class="active"><a data-toggle="tab" href="#GeneralDetailsTab">Detalhes Gerais</a></li>
        <li><a data-toggle="tab" href="#RentStateTab">Estado do Veículo</a></li>
        <li><a data-toggle="tab" href="#LocalizationsTab">Localizações</a></li>
        <li><a data-toggle="tab" href="#PriceTab">Preços</a></li>
    </ul>

    <div class="tab-content">
        <div id="GeneralDetailsTab" class="tab-pane in active">
            <br />

            <div class="form-group">
                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Type.TypeName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", disable = "disable" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Brand.BrandName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", disable = "disable" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Model.ModelName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", disable = "disable" } })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Colour, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Colour.ColourName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", disable = "disable" } })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.vehiclePassengers, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.vehiclePassengers, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", disable = "disable" } })

                </div>
            </div>
        </div> @*end of generalDetailsTab*@

        <div id="RentStateTab" class="tab-pane ">

            <br />
            @if (Model.IsAdmin)
            {
                using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.VehicleId)
                    <div class="form-group">
                        @Html.LabelFor(model => model.VehicleStateId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(m => m.VehicleStateId, Model.States, "Tipo", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.VehicleStateId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-pull-1 col-md-5">
                            <input type="submit" value="Guardar " class="btn btn-success" />
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.VehicleStateId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.VehicleState.VehicleStateName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", disable = "disable" } })

                    </div>
                </div>
            }

            <div class="form-group">
                @Html.LabelFor(model => model.Owner, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Owner.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", disable = "disable" } })

                </div>
                <div class="col-md-pull-1 col-md-5">
                    @Html.ActionLink("Ver Perfil Propriatário", "UserProfile", "Account", new { area = "", id = Model.Owner.Id }, new { @class = "btn btn-primary" })
                </div>
            </div>

        </div> @*end of RentStateTab*@

        <div id="LocalizationsTab" class="tab-pane ">
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Location.LocationName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", disable = "disable" } })

                </div>
            </div>
        </div> @*end of LocalizationsTab*@

        <div id="PriceTab" class="tab-pane ">
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.HourlyPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HourlyPrice, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", disable = "disable" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DailyPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DailyPrice, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", disable = "disable" } })
                </div>
            </div>

        </div> @*end of PriceTab*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">

            </div>
        </div>

    </div>

</div>

<hr />
<div>
    <button type="button" class="btn btn-secondary btn-sm" onclick="history.go(-1); return false;" href="#">
        <span class="glyphicon glyphicon-chevron-left"></span>&nbsp;Voltar
    </button>
    @if (Model.CanRent)
    {
        <button type="button" class="btn btn-success btn-sm" onclick="location.href='@Url.Action("Create","Rent", new { Area ="", id = Model.VehicleId})'">
            <span class="glyphicon glyphicon-road"></span>&nbsp;Alugar
        </button>
    }

</div>


