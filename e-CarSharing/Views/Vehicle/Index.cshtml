@model e_CarSharing.Models.SearchVehicleViewModel

@{
    ViewBag.Title = "All Vehicles";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Todos os Veiculos</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <div class="tab-content">

            <div class="form-group">
                @Html.LabelFor(model => model.TypeId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(m => m.TypeId, Model.Types, "Escolha um tipo", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(m => m.RoleId, Model.Roles, "Escolha um tipo", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                </div>
            </div>

            <hr />

            @if (Model.TypeId != null)
            {


                <div class="form-group">
                    @Html.LabelFor(model => model.BrandId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(m => m.BrandId, Model.Brands, "Escolha uma marca", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })
                    </div>

                    @Html.LabelFor(model => model.ModelId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @if (Model.Models.Count() != 0)
                        {
                            @Html.DropDownListFor(m => m.ModelId, Model.Models, "Escolha um modelo", new { @class = "form-control" })
                        }
                        else
                        {
                            @Html.DropDownListFor(m => m.ModelId, Model.Models, "Sem modelos disponiveis", new { @class = "form-control", @readonly = "readonly", disable = "disable" })
                        }

                        @Html.ValidationMessageFor(model => model.ModelId, "", new { @class = "text-danger" })
                    </div>
                </div>
            }

            <div class="form-group">
                @Html.LabelFor(model => model.ColourId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(m => m.ColourId, Model.Colours, "Escolha uma cor", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ColourId, "", new { @class = "text-danger" })
                </div>


                @Html.LabelFor(model => model.VehiclePassengers, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.VehiclePassengers, new { htmlAttributes = new { @class = "form-control", @placeholder = "1" } })
                    @Html.ValidationMessageFor(model => model.VehiclePassengers, "", new { @class = "text-danger" })
                </div>
            </div>

            <hr />

            <div class="form-group">
                @Html.LabelFor(model => model.LocationId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(m => m.LocationId, Model.Locations, "Escolha uma localização", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
                </div>
            </div>
            @*
                <div class="form-group">
                    @Html.LabelFor(model => model.BeginDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.BeginDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                        @Html.ValidationMessageFor(model => model.BeginDate, "", new { @class = "text-danger" })
                    </div>

                    @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>*@

        </div>

    </div>


    <div>
        <button type="button" class="btn btn-danger" onclick="location.href='@Url.Action("Index")'">
            Reset
        </button>
        <button type="submit" class="btn btn-success">
            <span class="glyphicon glyphicon-search"></span>&nbsp;&nbsp; Pesquisar
        </button>



    </div>

}
<hr />

@if (Model.Vehicles.Count() != 0)
{

    <table class="table table-bordered table-responsive table-condensed table-striped">
        <tr>
            <th>
                @Html.DisplayName("Tipo")
            </th>
            <th>
                @Html.DisplayName("Marca")
            </th>
            <th>
                @Html.DisplayName("Modelo")
            </th>
            <th>
                @Html.DisplayName("Cor")
            </th>
            <th>
                @Html.DisplayName("Número de Passageiros")
            </th>
            <th>
                @Html.DisplayName("Preço por Hora")
            </th>
            <th>
                @Html.DisplayName("Preço por Dia")
            </th>
            <th>
                @Html.DisplayName("Proprietário")
            </th>
            <th>
                @Html.DisplayName("Localização")
            </th>
            <th>
                @Html.DisplayName("Ações")
            </th>
        </tr>

        @foreach (var item in Model.Vehicles)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Type.TypeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Brand.BrandName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Model.ModelName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Colour.ColourName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VehiclePassengers)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HourlyPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DailyPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.User.UserName)
                    (@Html.DisplayFor(modelItem => item.User.UserRole))
                </td>
                <td>
                    <button type="button" class="btn btn-sm btn-info" data-toggle="modal" data-target="#myModal">
                        <span class="glyphicon glyphicon-map-marker"></span>&nbsp;  @Html.DisplayFor(modelItem => item.Location.LocationName)
                    </button>

                </td>
                <td>
                    @Html.ActionLink("Detalhes", "Details", new { Area = "", id = item.VehicleId }, new { @class = "btn btn-primary btn-sm" })
                </td>
            </tr>
        }

    </table>
}
else
{
    <h4>A pesquisa não obteve resultados</h4>
}

<div>
    <button type="button" class="btn btn-secondary btn-sm" onclick="location.href='@Url.Action("Index","Home", new { @area =""})'">
        <span class="glyphicon glyphicon-chevron-left"></span>&nbsp;Voltar
    </button>
</div>


<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Marca - @Html.DisplayFor(model => model.LocationId) </h4>
            </div>
            <div class="modal-body">
              To Do...
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Fechar</button>
            </div>
        </div>
    </div>
</div> 